{"version":3,"sources":["js/brim.js","js/gyro.js","js/livereload.js","js/socket.js"],"names":["gajus","brim","platform","view","touched","os","family","parseInt","version","scream","Scream","width","Brim","viewport","on","e","viewName","document","ontouchstart","window","addEventListener","orientation","style","display","getElementsByClassName","preventDefault","innerHTML","getElementById","body","FULLTILT","requestAnimationFrame","client","fulltiltOrientation","motion","then","motionData","console","log","sendOrientation","inVR","obj","beta","alpha","navigator","standalone","innerWidth","innerHeight","userAgent","match","touches","ontouchend","send","livereloadScript","createElement","setAttribute","location","hostname","canvas","url","host","WebSocket","player","play"],"mappings":"YAAA,IAAIA,OAAOC,KAAMC,SAAUC,KAAMC,OAAjC,KAAIJ,OAAOC,UAAMC,YAAjB,QAAiCE,SAAjCC,GAAAC,QAAAC,SAAAL,SAAAG,GAAAG,QAAA,KAAA,EAAA,CAGE,GAAIC,QAAST,MAAMU,QADjBC,OACEF,SAAST,IACXW,UAAO,MADiBV,MAA1BD,MAAAY,MAQEC,SAAUJ,SADMR,KAAlBa,GAAA,aAAA,SAAAC,GAKEZ,KAAOY,EAAEC,SADX,YAAKF,EAAGE,SACNb,SAASa,aAAT,SAAAD,GACIA,EAAEC,iBACJC,QAASC,IAGRD,SAHDC,aAAA,SAAAH,GADFX,QAKOW,UAIN,QAAAb,SAAAG,GAAAC,QAAAC,SAAAL,SAAAG,GAAAG,QAAA,KAAA,GACFW,OAZDC,iBAAA,oBAAA,WAaKD,OAAIjB,aACTiB,KAAOC,UACLH,SAAWI,uBAAa,SAAA,GAAAC,MAAAC,QAAA,QAEtBN,SAASO,uBAAuB,SAAS,GAAGF,MAAMC,QAAU,UAE5DN,GACDA,SAAAC,aAAA,SAAAH,GANHA,EAOGU,iBACHR,QAASC,IAEPd,SAAAA,KAAAsB,UAAAT,SAAAU,eAAA,aAAAD,UAAAT,SAAAU,eAAA,aAAAD,UAFFP,OAAAE,cAIAJ,KAASW,UACTX,SAAWI,uBAAa,SAAA,GAAAC,MAAAC,QAAA,SAGvBN,SAAAW,KAAAF,UAAAT,SAAAU,eAAA,aAAAD;YC5CH,IAAIG,UAAUC,sBAAuBC,OAAQ5B,KAAM6B,oBAAqB9B,SAApE2B,OAAJ,GAAcC,UAAAA,eAGdG,QAAOC,KAAK,SAACC,GADbH,oBAAiBH,IACjBI,MAAOC,SAAAA,GACLF,QAAAA,MAAAA,GADFI,QAESC,IAAA,wBAGR,IALDC,iBAAA,QAAAA,KAQE,GAAIN,qBAAuBO,OAAQ,CADjCD,GAAAA,GAAAA,oBAAAA,gCACEN,IACFQ,GAAIL,MAAAA,EAAaH,MACjBQ,EAAIA,KAAML,EAAVM,KACAD,EAAIE,MAAQP,EAAWO,MACvBF,OAAIC,KAAON,KAAAA,UAAXK,IAGDV,sBAAAQ,GAEDR,kBAEFQ,IAAAA,MAAAA,WAGE,UAAKnB,OAAOwB,UAAUC,YAAqC,QAAvB1C,SAASG,GAAGC,QAAoBC,SAASL,SAASG,GAAGG,QAAS,KAAO,GAAc,YAATL,MAAsBgB,OAAO0B,WAAa1B,OAAO2B,cAAgBH,UAAUI,UAAUC,MAAM,aAAeL,UAAUI,UAAUC,MAAM,gBAAkBL,UAAUI,UAAUC,MAAM,gBADhSC,QAAA,EAQI7C,QAAU,SAAUW,GADpBkC,QACA7C,UAIHa,UAJDiC,WAAA,WAOMD,QAAU,GADhBhC,QAASiC,IAAAA,WACPnB,OAAIkB,KAAU,YACJZ,QAAI,GACZN,QAAOoB,IAAK,eAFdpB,OAGOoB,KAAIF,gBACDZ,QAAI,GACZN,OAAOoB,KAAK,cAFPf,QAGAC,IAAIY,eACFE,QAAK,IACZf,OAAAA,KAAY,cAFPA,QAGAC,IAAIY,eAETb,QAAQC,GAGXjC;YCrDD,IAAIgD,kBAAmBnC,SAASoC,cAAc,SAC9CD,kBAAiBE,aAAa,MAAO,UAAYnC,OAAOoC,SAASC,SAAW,wBAD5EJ,iBAAIA,aAAmBnC,UAASoC,SAChCD,SAAAA,KAAAA,YAAiBE;YCDjB,IAAMG,QAASxC,SAASU,eAAe,SACjC+B,IAAAA,QAAczC,SAASsC,SAASI,IAAtCxC,QAAMuC,OAAAA,GAAczC,QAAAA,UAAAyC,IAEpBvC,IAAAA,QAAA,GAAgBA,QAAIA,OAAOyC,OAAXF,KAAhBD,OAAAA,QAGAI,QAAOC","file":"scripts.min.js","sourcesContent":["var gajus, brim, platform, view, touched\n\nif (!window.navigator.standalone && platform.os.family === 'iOS' && parseInt(platform.os.version, 10) >= 8) {\n  let scream = gajus.Scream({\n    width: {\n      portrait: 320,\n      landscape: 640\n    }\n  })\n\n  brim = gajus.Brim({\n    viewport: scream\n  })\n\n  brim.on('viewchange', function (e) {\n    view = e.viewName\n    if (e.viewName === 'minimal') {\n      document.ontouchstart = function (e) {\n        e.preventDefault()\n        touched(e)\n      }\n    } else {\n      document.ontouchstart = function (e) {\n        touched(e)\n      }\n    }\n  })\n} else if (platform.os.family === 'iOS' && parseInt(platform.os.version, 10) >= 8) {\n  window.addEventListener('orientationchange', function () {\n    if (window.orientation) {\n      view = 'minimal'\n      document.getElementsByClassName('cover')[0].style.display = 'none'\n    } else {\n      document.getElementsByClassName('cover')[0].style.display = 'block'\n    }\n  }, false)\n  document.ontouchstart = function (e) {\n    e.preventDefault()\n    touched(e)\n  }\n  document.body.innerHTML = document.getElementById('brim-mask').innerHTML + document.getElementById('brim-main').innerHTML\n  if (window.orientation) {\n    view = 'minimal'\n    document.getElementsByClassName('cover')[0].style.display = 'none'\n  }\n} else {\n  document.body.innerHTML = document.getElementById('brim-main').innerHTML\n}\n","var FULLTILT, requestAnimationFrame, client, view, fulltiltOrientation, platform\n\nlet motion = new FULLTILT.getDeviceMotion()\nmotion.then((motionData) => {\n  fulltiltOrientation = motionData\n}).catch((msg) => {\n  console.error(msg)\n  console.log('Data not available!')\n})\n\nvar sendOrientation = function () {\n  if (fulltiltOrientation && inVR()) {\n    let motionData = fulltiltOrientation.getScreenAdjustedRotationRate()\n    let obj = {}\n    obj.alpha = motionData.alpha\n    obj.beta = motionData.beta\n    obj.gamma = motionData.gamma\n    client.send(JSON.stringify(obj))\n  }\n\n  requestAnimationFrame(sendOrientation)\n}\nsendOrientation()\n\nvar inVR = function () {\n  if (!window.navigator.standalone && platform.os.family === 'iOS' && parseInt(platform.os.version, 10) >= 8 && view === 'minimal' || window.innerWidth > window.innerHeight && (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/iemobile/i))) {\n    return true\n  }\n  return false\n}\n\nlet touches = 0\nvar touched = function (e) {\n  if (client) {\n    touches++\n  }\n}\n\ndocument.ontouchend = function () {\n  if (touches > 3) {\n    console.log('invertX')\n    client.send('invertX')\n  } else if (touches > 2) {\n    console.log('recalibrate')\n    client.send('recalibrate')\n  } else if (touches > 1) {\n    client.send('rightClick')\n    console.log('rightClick')\n  } else if (touches > 0) {\n    client.send('mouseClick')\n    console.log('mouseClick')\n  }\n  touches = 0\n}\n\ntouched()\n","let livereloadScript = document.createElement('script')\nlivereloadScript.setAttribute('src', 'http://' + window.location.hostname + ':35729/livereload.js')\nlivereloadScript.setAttribute('charset', 'utf-8')\ndocument.body.appendChild(livereloadScript)\n","const canvas = document.getElementById('video')\nconst url = `ws://${document.location.host}`\n\nwindow.client = new window.WebSocket(url)\n\nconst player = new window.JSMpeg.Player(url, { canvas })\nplayer.play()\n"]}